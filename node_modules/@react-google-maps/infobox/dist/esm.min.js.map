{"version":3,"file":"esm.min.js","sources":["../src/InfoBox.tsx"],"sourcesContent":["/* global google */\n/* eslint-disable filenames/match-regex */\nimport { InfoBoxOptions } from './types'\n\nexport class InfoBox {\n  content: string | Node\n  disableAutoPan: boolean\n  maxWidth: number\n  pixelOffset: google.maps.Size\n  position: google.maps.LatLng\n  zIndex: number | undefined | null\n  boxClass: string\n  boxStyle: {\n    [key: string]: any\n  }\n  closeBoxMargin: string\n  closeBoxURL: string\n  infoBoxClearance: google.maps.Size\n  isHidden: boolean\n  alignBottom: boolean\n  pane: string\n  enableEventPropagation: boolean\n  div: HTMLDivElement | null\n  closeListener: google.maps.MapsEventListener | null\n  moveListener: google.maps.MapsEventListener | null\n  mapListener: google.maps.MapsEventListener | null\n  contextListener: google.maps.MapsEventListener | null\n  eventListeners: google.maps.MapsEventListener[] | null\n  fixedWidthSet: boolean | null\n\n  constructor(options: InfoBoxOptions = {}) {\n    this.extend(InfoBox, google.maps.OverlayView)\n\n    // Standard options (in common with google.maps.InfoWindow):\n    this.content = options.content || ''\n    this.disableAutoPan = options.disableAutoPan || false\n    this.maxWidth = options.maxWidth || 0\n    this.pixelOffset = options.pixelOffset || new google.maps.Size(0, 0)\n    this.position = options.position || new google.maps.LatLng(0, 0)\n    this.zIndex = options.zIndex || null\n\n    // Additional options (unique to InfoBox):\n    this.boxClass = options.boxClass || 'infoBox'\n    this.boxStyle = options.boxStyle || {}\n    this.closeBoxMargin = options.closeBoxMargin || '2px'\n    this.closeBoxURL = options.closeBoxURL || 'http://www.google.com/intl/en_us/mapfiles/close.gif'\n    if (options.closeBoxURL === '') {\n      this.closeBoxURL = ''\n    }\n    this.infoBoxClearance = options.infoBoxClearance || new google.maps.Size(1, 1)\n\n    if (typeof options.visible === 'undefined') {\n      if (typeof options.isHidden === 'undefined') {\n        options.visible = true\n      } else {\n        options.visible = !options.isHidden\n      }\n    }\n    this.isHidden = !options.visible\n\n    this.alignBottom = options.alignBottom || false\n    this.pane = options.pane || 'floatPane'\n    this.enableEventPropagation = options.enableEventPropagation || false\n\n    this.div = null\n    this.closeListener = null\n    this.moveListener = null\n    this.mapListener = null\n    this.contextListener = null\n    this.eventListeners = null\n    this.fixedWidthSet = null\n  }\n\n  createInfoBoxDiv(): void {\n    // This handler prevents an event in the InfoBox from being passed on to the map.\n    function cancelHandler(event: Event) {\n      event.cancelBubble = true\n      if (event.stopPropagation) {\n        event.stopPropagation()\n      }\n    }\n\n    // This handler ignores the current event in the InfoBox and conditionally prevents\n    // the event from being passed on to the map. It is used for the contextmenu event.\n    // eslint-disable-next-line  @getify/proper-arrows/this\n    const ignoreHandler = (event: Event) => {\n      event.returnValue = false\n\n      if (event.preventDefault) {\n        event.preventDefault()\n      }\n\n      if (!this.enableEventPropagation) {\n        cancelHandler(event)\n      }\n    }\n\n    if (!this.div) {\n      this.div = document.createElement('div')\n      this.setBoxStyle()\n\n      if (typeof this.content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + this.content\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg()\n        this.div.appendChild(this.content)\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      const panes = this.getPanes()\n      panes[this.pane].appendChild(this.div) // Add the InfoBox div to the DOM\n\n      this.addClickHandler()\n\n      if (this.div.style.width) {\n        this.fixedWidthSet = true\n      } else {\n        if (this.maxWidth !== 0 && this.div.offsetWidth > this.maxWidth) {\n          this.div.style.width = this.maxWidth + 'px'\n          this.fixedWidthSet = true\n        } else {\n          // The following code is needed to overcome problems with MSIE\n          const bw = this.getBoxWidths()\n          this.div.style.width = this.div.offsetWidth - bw.left - bw.right + 'px'\n          this.fixedWidthSet = false\n        }\n      }\n\n      this.panBox(this.disableAutoPan)\n\n      if (!this.enableEventPropagation) {\n        this.eventListeners = []\n\n        // Cancel event propagation.\n        // Note: mousemove not included (to resolve Issue 152)\n        const events = [\n          'mousedown',\n          'mouseover',\n          'mouseout',\n          'mouseup',\n          'click',\n          'dblclick',\n          'touchstart',\n          'touchend',\n          'touchmove',\n        ]\n\n        for (let i = 0; i < events.length; i++) {\n          this.eventListeners.push(\n            google.maps.event.addDomListener(this.div, events[i], cancelHandler)\n          )\n        }\n\n        // Workaround for Google bug that causes the cursor to change to a pointer\n        // when the mouse moves over a marker underneath InfoBox.\n        this.eventListeners.push(\n          google.maps.event.addDomListener(\n            this.div,\n            'mouseover',\n            // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n            () => {\n              if (this.div) {\n                this.div.style.cursor = 'default'\n              }\n            }\n          )\n        )\n      }\n\n      this.contextListener = google.maps.event.addDomListener(\n        this.div,\n        'contextmenu',\n        ignoreHandler\n      )\n\n      /**\n       * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.\n       * @name InfoBox#domready\n       * @event\n       */\n      google.maps.event.trigger(this, 'domready')\n    }\n  }\n\n  getCloseBoxImg(): string {\n    let img = ''\n\n    if (this.closeBoxURL !== '') {\n      img = '<img alt=\"\"'\n      img += ' aria-hidden=\"true\"'\n      img += \" src='\" + this.closeBoxURL + \"'\"\n      img += ' align=right' // Do this because Opera chokes on style='float: right;'\n      img += \" style='\"\n      img += ' position: relative;' // Required by MSIE\n      img += ' cursor: pointer;'\n      img += ' margin: ' + this.closeBoxMargin + ';'\n      img += \"'>\"\n    }\n\n    return img\n  }\n\n  addClickHandler(): void {\n    if (this.div && this.div.firstChild && this.closeBoxURL !== '') {\n      const closeBox = this.div.firstChild\n      this.closeListener = google.maps.event.addDomListener(\n        closeBox,\n        'click',\n        this.getCloseClickHandler()\n      )\n    } else {\n      this.closeListener = null\n    }\n  }\n\n  getCloseClickHandler() {\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    return (event: Event) => {\n      // 1.0.3 fix: Always prevent propagation of a close box click to the map:\n      event.cancelBubble = true\n\n      if (event.stopPropagation) {\n        event.stopPropagation()\n      }\n\n      /**\n       * This event is fired when the InfoBox's close box is clicked.\n       * @name InfoBox#closeclick\n       * @event\n       */\n      google.maps.event.trigger(this, 'closeclick')\n\n      this.close()\n    }\n  }\n\n  panBox(disablePan?: boolean): void {\n    if (this.div && !disablePan) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      const map: google.maps.Map | google.maps.StreetViewPanorama | null | undefined = this.getMap()\n\n      // Only pan if attached to map, not panorama\n      if (map instanceof google.maps.Map) {\n        let xOffset = 0\n        let yOffset = 0\n\n        const bounds = map.getBounds()\n        if (bounds && !bounds.contains(this.position)) {\n          // Marker not in visible area of map, so set center\n          // of map to the marker position first.\n          map.setCenter(this.position)\n        }\n\n        const mapDiv = map.getDiv()\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        const mapWidth = mapDiv.offsetWidth\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        const mapHeight = mapDiv.offsetHeight\n        const iwOffsetX = this.pixelOffset.width\n        const iwOffsetY = this.pixelOffset.height\n        const iwWidth = this.div.offsetWidth\n        const iwHeight = this.div.offsetHeight\n        const padX = this.infoBoxClearance.width\n        const padY = this.infoBoxClearance.height\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        const projection: google.maps.MapCanvasProjection = this.getProjection()\n        const pixPosition = projection.fromLatLngToContainerPixel(this.position)\n\n        if (pixPosition !== null) {\n          if (pixPosition.x < -iwOffsetX + padX) {\n            xOffset = pixPosition.x + iwOffsetX - padX\n          } else if (pixPosition.x + iwWidth + iwOffsetX + padX > mapWidth) {\n            xOffset = pixPosition.x + iwWidth + iwOffsetX + padX - mapWidth\n          }\n\n          if (this.alignBottom) {\n            if (pixPosition.y < -iwOffsetY + padY + iwHeight) {\n              yOffset = pixPosition.y + iwOffsetY - padY - iwHeight\n            } else if (pixPosition.y + iwOffsetY + padY > mapHeight) {\n              yOffset = pixPosition.y + iwOffsetY + padY - mapHeight\n            }\n          } else {\n            if (pixPosition.y < -iwOffsetY + padY) {\n              yOffset = pixPosition.y + iwOffsetY - padY\n            } else if (pixPosition.y + iwHeight + iwOffsetY + padY > mapHeight) {\n              yOffset = pixPosition.y + iwHeight + iwOffsetY + padY - mapHeight\n            }\n          }\n        }\n\n        if (!(xOffset === 0 && yOffset === 0)) {\n          // Move the map to the shifted center.\n          map.panBy(xOffset, yOffset)\n        }\n      }\n    }\n  }\n\n  setBoxStyle(): void {\n    if (this.div) {\n      // Apply style values from the style sheet defined in the boxClass parameter:\n      this.div.className = this.boxClass\n\n      // Clear existing inline style values:\n      this.div.style.cssText = ''\n\n      // Apply style values defined in the boxStyle parameter:\n      const boxStyle = this.boxStyle\n      for (const i in boxStyle) {\n        if (boxStyle.hasOwnProperty(i)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.div.style[i] = boxStyle[i]\n        }\n      }\n\n      // Fix for iOS disappearing InfoBox problem\n      // See http://stackoverflow.com/questions/9229535/google-maps-markers-disappear-at-certain-zoom-level-only-on-iphone-ipad\n      this.div.style.webkitTransform = 'translateZ(0)'\n\n      // Fix up opacity style for benefit of MSIE\n      if (typeof this.div.style.opacity !== 'undefined' && this.div.style.opacity !== '') {\n        // See http://www.quirksmode.org/css/opacity.html\n        const opacity = parseFloat(this.div.style.opacity || '')\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.div.style.msFilter =\n          '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + opacity * 100 + ')\"'\n        this.div.style.filter = 'alpha(opacity=' + opacity * 100 + ')'\n      }\n\n      // Apply required styles\n      this.div.style.position = 'absolute'\n      this.div.style.visibility = 'hidden'\n      if (this.zIndex !== null) {\n        this.div.style.zIndex = this.zIndex + ''\n      }\n      if (!this.div.style.overflow) {\n        this.div.style.overflow = 'auto'\n      }\n    }\n  }\n\n  getBoxWidths(): { bottom: number; left: number; right: number; top: number } {\n    const bw = { top: 0, bottom: 0, left: 0, right: 0 }\n\n    if (!this.div) {\n      return bw\n    }\n\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n      const ownerDocument = this.div.ownerDocument\n      const computedStyle =\n        ownerDocument && ownerDocument.defaultView\n          ? ownerDocument.defaultView.getComputedStyle(this.div, '')\n          : null\n\n      if (computedStyle) {\n        // The computed styles are always in pixel units (good!)\n        bw.top = parseInt(computedStyle.borderTopWidth || '', 10) || 0\n        bw.bottom = parseInt(computedStyle.borderBottomWidth || '', 10) || 0\n        bw.left = parseInt(computedStyle.borderLeftWidth || '', 10) || 0\n        bw.right = parseInt(computedStyle.borderRightWidth || '', 10) || 0\n      }\n    } else if (\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      document.documentElement.currentStyle // MSIE\n    ) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      const currentStyle = this.div.currentStyle\n\n      if (currentStyle) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // The current styles may not be in pixel units, but assume they are (bad!)\n        bw.top = parseInt(currentStyle.borderTopWidth || '', 10) || 0\n        bw.bottom = parseInt(currentStyle.borderBottomWidth || '', 10) || 0\n        bw.left = parseInt(currentStyle.borderLeftWidth || '', 10) || 0\n        bw.right = parseInt(currentStyle.borderRightWidth || '', 10) || 0\n      }\n    }\n\n    return bw\n  }\n\n  onRemove(): void {\n    if (this.div && this.div.parentNode) {\n      this.div.parentNode.removeChild(this.div)\n      this.div = null\n    }\n  }\n\n  draw(): void {\n    this.createInfoBoxDiv()\n\n    if (this.div) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      const projection: google.maps.MapCanvasProjection = this.getProjection()\n      const pixPosition = projection.fromLatLngToDivPixel(this.position)\n\n      if (pixPosition !== null) {\n        this.div.style.left = pixPosition.x + this.pixelOffset.width + 'px'\n\n        if (this.alignBottom) {\n          this.div.style.bottom = -(pixPosition.y + this.pixelOffset.height) + 'px'\n        } else {\n          this.div.style.top = pixPosition.y + this.pixelOffset.height + 'px'\n        }\n      }\n\n      if (this.isHidden) {\n        this.div.style.visibility = 'hidden'\n      } else {\n        this.div.style.visibility = 'visible'\n      }\n    }\n  }\n\n  setOptions(options: InfoBoxOptions = {}): void {\n    if (typeof options.boxClass !== 'undefined') {\n      // Must be first\n      this.boxClass = options.boxClass\n      this.setBoxStyle()\n    }\n    if (typeof options.boxStyle !== 'undefined') {\n      // Must be second\n      this.boxStyle = options.boxStyle\n      this.setBoxStyle()\n    }\n    if (typeof options.content !== 'undefined') {\n      this.setContent(options.content)\n    }\n    if (typeof options.disableAutoPan !== 'undefined') {\n      this.disableAutoPan = options.disableAutoPan\n    }\n    if (typeof options.maxWidth !== 'undefined') {\n      this.maxWidth = options.maxWidth\n    }\n    if (typeof options.pixelOffset !== 'undefined') {\n      this.pixelOffset = options.pixelOffset\n    }\n    if (typeof options.alignBottom !== 'undefined') {\n      this.alignBottom = options.alignBottom\n    }\n    if (typeof options.position !== 'undefined') {\n      this.setPosition(options.position)\n    }\n    if (typeof options.zIndex !== 'undefined') {\n      this.setZIndex(options.zIndex)\n    }\n    if (typeof options.closeBoxMargin !== 'undefined') {\n      this.closeBoxMargin = options.closeBoxMargin\n    }\n    if (typeof options.closeBoxURL !== 'undefined') {\n      this.closeBoxURL = options.closeBoxURL\n    }\n    if (typeof options.infoBoxClearance !== 'undefined') {\n      this.infoBoxClearance = options.infoBoxClearance\n    }\n    if (typeof options.isHidden !== 'undefined') {\n      this.isHidden = options.isHidden\n    }\n    if (typeof options.visible !== 'undefined') {\n      this.isHidden = !options.visible\n    }\n    if (typeof options.enableEventPropagation !== 'undefined') {\n      this.enableEventPropagation = options.enableEventPropagation\n    }\n\n    if (this.div) {\n      this.draw()\n    }\n  }\n\n  setContent(content: string | Node): void {\n    this.content = content\n\n    if (this.div) {\n      if (this.closeListener) {\n        google.maps.event.removeListener(this.closeListener)\n        this.closeListener = null\n      }\n\n      // Odd code required to make things work with MSIE.\n      if (!this.fixedWidthSet) {\n        this.div.style.width = ''\n      }\n\n      if (typeof content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + content\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg()\n        this.div.appendChild(content)\n      }\n\n      // Perverse code required to make things work with MSIE.\n      // (Ensures the close box does, in fact, float to the right.)\n      if (!this.fixedWidthSet) {\n        this.div.style.width = this.div.offsetWidth + 'px'\n        if (typeof content === 'string') {\n          this.div.innerHTML = this.getCloseBoxImg() + content\n        } else {\n          this.div.innerHTML = this.getCloseBoxImg()\n          this.div.appendChild(content)\n        }\n      }\n\n      this.addClickHandler()\n    }\n\n    /**\n     * This event is fired when the content of the InfoBox changes.\n     * @name InfoBox#content_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'content_changed')\n  }\n\n  setPosition(latLng: google.maps.LatLng): void {\n    this.position = latLng\n\n    if (this.div) {\n      this.draw()\n    }\n\n    /**\n     * This event is fired when the position of the InfoBox changes.\n     * @name InfoBox#position_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'position_changed')\n  }\n\n  setVisible(isVisible: boolean): void {\n    this.isHidden = !isVisible\n    if (this.div) {\n      this.div.style.visibility = this.isHidden ? 'hidden' : 'visible'\n    }\n  }\n\n  setZIndex(index: number): void {\n    this.zIndex = index\n\n    if (this.div) {\n      this.div.style.zIndex = index + ''\n    }\n\n    /**\n     * This event is fired when the zIndex of the InfoBox changes.\n     * @name InfoBox#zindex_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'zindex_changed')\n  }\n\n  getContent(): string | Node {\n    return this.content\n  }\n\n  getPosition(): google.maps.LatLng {\n    return this.position\n  }\n\n  getZIndex(): number | null | undefined {\n    return this.zIndex\n  }\n\n  getVisible(): boolean {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    const map: google.maps.Map | google.maps.StreetViewPanorama | null | undefined = this.getMap()\n    let isVisible\n\n    if (typeof map === 'undefined' || map === null) {\n      isVisible = false\n    } else {\n      isVisible = !this.isHidden\n    }\n\n    return isVisible\n  }\n\n  show(): void {\n    this.isHidden = false\n    if (this.div) {\n      this.div.style.visibility = 'visible'\n    }\n  }\n\n  hide(): void {\n    this.isHidden = true\n    if (this.div) {\n      this.div.style.visibility = 'hidden'\n    }\n  }\n\n  open(\n    map: google.maps.Map | google.maps.StreetViewPanorama,\n    anchor?: google.maps.MVCObject\n  ): void {\n    if (anchor) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.position = anchor.getPosition()\n      this.moveListener = google.maps.event.addListener(\n        anchor,\n        'position_changed',\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          const position = anchor.getPosition()\n          this.setPosition(position)\n        }\n      )\n\n      this.mapListener = google.maps.event.addListener(\n        anchor,\n        'map_changed',\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.setMap(anchor.map)\n        }\n      )\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.setMap(map)\n\n    if (this.div) {\n      this.panBox()\n    }\n  }\n\n  close() {\n    if (this.closeListener) {\n      google.maps.event.removeListener(this.closeListener)\n      this.closeListener = null\n    }\n\n    if (this.eventListeners) {\n      for (let i = 0; i < this.eventListeners.length; i++) {\n        google.maps.event.removeListener(this.eventListeners[i])\n      }\n      this.eventListeners = null\n    }\n\n    if (this.moveListener) {\n      google.maps.event.removeListener(this.moveListener)\n      this.moveListener = null\n    }\n\n    if (this.mapListener) {\n      google.maps.event.removeListener(this.mapListener)\n      this.mapListener = null\n    }\n\n    if (this.contextListener) {\n      google.maps.event.removeListener(this.contextListener)\n      this.contextListener = null\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.setMap(null)\n  }\n\n  extend(obj1: any, obj2: any): any {\n    return function applyExtend(object: any) {\n      // eslint-disable-next-line guard-for-in\n      for (const property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        if (!this.prototype.hasOwnProperty(property)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.prototype[property] = object.prototype[property]\n        }\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      return this\n    }.apply(obj1, [obj2])\n  }\n}\n"],"names":["options","this","extend","InfoBox","google","maps","OverlayView","content","disableAutoPan","maxWidth","pixelOffset","Size","position","LatLng","zIndex","boxClass","boxStyle","closeBoxMargin","closeBoxURL","infoBoxClearance","visible","isHidden","alignBottom","pane","enableEventPropagation","div","closeListener","moveListener","mapListener","contextListener","eventListeners","fixedWidthSet","cancelHandler","event","cancelBubble","stopPropagation","document","createElement","setBoxStyle","innerHTML","getCloseBoxImg","appendChild","getPanes","addClickHandler","style","width","offsetWidth","bw","getBoxWidths","left","right","panBox","events","i","length","push","addDomListener","_this","cursor","returnValue","preventDefault","trigger","img","firstChild","closeBox","getCloseClickHandler","close","disablePan","map","getMap","Map","xOffset","yOffset","bounds","getBounds","contains","setCenter","mapDiv","getDiv","mapWidth","mapHeight","offsetHeight","iwOffsetX","iwOffsetY","height","iwWidth","iwHeight","padX","padY","pixPosition","getProjection","fromLatLngToContainerPixel","x","y","panBy","className","cssText","hasOwnProperty","webkitTransform","opacity","parseFloat","msFilter","filter","visibility","overflow","top","bottom","defaultView","getComputedStyle","ownerDocument","computedStyle","parseInt","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","documentElement","currentStyle","parentNode","removeChild","createInfoBoxDiv","fromLatLngToDivPixel","setContent","setPosition","setZIndex","draw","removeListener","latLng","isVisible","index","anchor","getPosition","addListener","setMap","obj1","obj2","object","property","prototype","apply"],"mappings":"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"}